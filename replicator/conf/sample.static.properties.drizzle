#################################
# REPLICATOR.PROPERTIES.DRIZZLE #
#################################
#
# This file contains properties for Drizzle DBMS replication.
#
# NOTE TO ALL USERS:  Empty property values are assigned as empty strings. 
# To assign the default value, comment out the key=value assignment. 
#
# NOTE TO WINDOWS USERS:  Single backslash characters are treated as escape 
# characters.  You must use forward slash (/) or double backslashes in file 
# names. 

# Replicator role.  Uncomment one of the choices of master or slave.  
# There is no default for this value--it must be set or the replicator 
# will not go online.  
#replicator.role=master
#replicator.role=slave

# Replicator auto-enable.  If true, replicator automatically goes online 
# at start-up time. 
replicator.auto_enable=false

# Source ID. This required parameter is used to identify replication
# event source.  It must be unique for each replicator node.
replicator.source_id=tungsten

# Cluster name to which the replicator belongs.
cluster.name=default

# Service to which this replicator belongs.
service.name=default

# Schema to store Replicator catalog tables.
replicator.schema=tungsten_${service.name}

# Schema to store Replicator catalog tables. 
replicator.schema=tungsten

# Event checksum algorithm.  Possible values are 'SHA' or 'MD5' or 
# empty for no checksums
replicator.event.checksum=md5

# Extractor selection.  Value must be a logical name.  
replicator.extractor=drizzle

# Pre-storage filter selection.  Value must be one or more comma-separated
# logical filter names. 
#replicator.prefilter=logger

# Post-storage filter selection.  Value must be one or more comma-separated
# logical filter names. 
replicator.postfilter=mysqlsessions

# Applier selection.  Value must be a logical name whose parameters are 
# defined below. 
replicator.applier=drizzle

# Information regarding the RMI port to use
# for advertising JMX services
replicator.rmi_port=10000

# Used by manager to create datasources dynamically
replicator.resourceJdbcUrl=jdbc:drizzle://$serviceFacet.name$:$serviceFacet.port$/\${DBNAME}
replicator.resourceJdbcDriver=org.drizzle.jdbc.Driver
replicator.resourceVendor=drizzle
replicator.resourcePrecedence=99

#################################
# TRANSACTION HISTORY LOG (THL) #
#################################

# Address of this replicator's URI.  
replicator.thl.uri=thl://0.0.0.0/

# Master URI address.  For a master this points to the same address as 
# replicator.thl.uri.  For a slave this points to the master replicator's
# value.  
replicator.thl.remote_uri=thl://localhost/

# Parameters for configuring THL.  These must be fully filled out.  If you 
# use a database name other than 'tungsten' you must change property
# replicator.schema to match. (JIRA TREP-157). 
replicator.thl.storage=com.continuent.tungsten.replicator.thl.JdbcTHLStorage
replicator.thl.url=jdbc:drizzle://localhost/tungsten_${service.name}
replicator.thl.user=tungsten
replicator.thl.password=secret

##############
# EXTRACTORS #
##############

# Drizzle extractor properties.  
replicator.extractor.drizzle=com.continuent.tungsten.replicator.extractor.drizzle.DrizzleExtractor
replicator.extractor.drizzle.transaction_log=/mnt/ext3/var_drizzle/transaction.log

###########
# FILTERS # 
###########

# Dummy filter.  A filter that does nothing. 
replicator.filter.dummy=com.continuent.tungsten.replicator.filter.DummyFilter

# Logging filter.  Logs each event to current system log. 
replicator.filter.logger=com.continuent.tungsten.replicator.filter.LoggingFilter

# Database transform filter.  Transforms database names that match the 
# from_regex are transformed into the to_regex.  
replicator.filter.dbtransform=com.continuent.tungsten.replicator.filter.DatabaseTransformFilter
replicator.filter.dbtransform.from_regex=foo
replicator.filter.dbtransform.to_regex=bar

# Adds statements required to replicate temporary tables and session variables
# correctly within a session context
replicator.filter.mysqlsessions=com.continuent.tungsten.replicator.filter.MySQLSessionSupportFilter

# Transforms database, table and column names into upper or lower case. In case
# of statement replication generally it transforms everything except quoted
# string values.
replicator.filter.casetransform=com.continuent.tungsten.replicator.filter.CaseMappingFilter
replicator.filter.casetransform.to_upper_case=true

# JavaScript call out filter. Calls script's prepare(), filter(event) and
# release() functions. Define multiple filters with different names in case you
# need to call more than one script.
replicator.filter.javascript=com.continuent.tungsten.replicator.filter.JavaScriptFilter
replicator.filter.javascript.script=${replicator.home.dir}/samples/extensions/javascript/filter.js
replicator.filter.javascript.sample_custom_property="Sample value"

# Filter to be used on slaves in replicator.postfilter property. For every
# CREATE|DROP|ALTER|RENAME TABLE event adds a "SET foreign_key_checks=0"
# statement.
replicator.filter.foreignkeychecks=com.continuent.tungsten.replicator.filter.JavaScriptFilter 
replicator.filter.foreignkeychecks.script=${replicator.home.dir}/samples/extensions/javascript/foreignkeychecks.js 

# Time delay filter.  Should only be used on slaves, as it delays storage
# of new events on the master.  The time delay is in seconds. 
replicator.filter.delay=com.continuent.tungsten.replicator.filter.TimeDelayFilter
replicator.filter.delay.delay=300

############
# APPLIERS #
############

# Drizzle applier properties.  
#
replicator.applier.drizzle=com.continuent.tungsten.replicator.applier.DrizzleApplier
replicator.applier.drizzle.host=localhost
replicator.applier.drizzle.port=4427
replicator.applier.drizzle.user=tungsten
replicator.applier.drizzle.password=secret

# How to react on consistency check failure. Possible values are 'stop' or 'warn'. 
replicator.applier.consistency_policy=stop

# Should consistency check be sensitive to column names and/or types? Settings
# on a slave must be identical to master's. Values are 'true' or 'false'. 
replicator.applier.consistency_column_names=true
replicator.applier.consistency_column_types=true

################################
# BACKUP/RESTORE CONFIGURATION #
################################

# List of configured backup agents.  Uncomment appropriately for your site. 
#replicator.backup.agents=script

# Default backup agent.
replicator.backup.default=script

# Script Agent--Executes a script to backup or restore. 
replicator.backup.agent.script=com.continuent.tungsten.replicator.backup.generic.ScriptDumpAgent
replicator.backup.agent.script.script=${replicator.home.dir}/samples/scripts/backup/custom-backup.sh
replicator.backup.agent.script.commandPrefix=
replicator.backup.agent.script.hotBackupEnabled=false

# List of configured storage agents.  Uncomment appropriately for your site. 
#replicator.storage.agents=fs

# Default storage agent.
replicator.storage.default=fs

# File system storage agent.  For best results the directory parameter should
# be a shared file system visible to all replicators.  NOTE: CRC file checking
# may be time-consuming for large files; it is recommended if you can afford
# to check.  (Who really wants to load a bad backup??)
replicator.storage.agent.fs=com.continuent.tungsten.replicator.backup.FileSystemStorageAgent
replicator.storage.agent.fs.directory=/mnt/backups
replicator.storage.agent.fs.retention=3
replicator.storage.agent.fs.crcCheckingEnabled=true

######################
# PERFORMANCE TUNING #
######################

# The following settings can be used in order to get better
# performance.  THL on the slave side is caching events that are
# received from the master THL.  This is done in order to prevent
# from reading events from THL database on the slave side.  The
# size of this cache can be changed by the following setting. By
# default, this cache only contains one event at a time.  
#
# WARNING: increasing the size of the cache will potientially require 
# more memory.

# replicator.thl.cache_size=1

# The slave applier can commit events by block. By default, commit
# occurs for each processed  event (1 event = 1 transaction). In order
# to speed up events applying, the following value  can be changed.
# If it is set to a number x (greater than 1), the applier will commit
# every x events, or when the cache is empty.

# replicator.thl.applier_block_commit_size=1

# The transfer rate between the master and the slave can be improved
# by setting the following setting to a value greater than 1, which
# is the default.  In doing so, this will also require more memory
# on the master side.

# replicator.thl.reset_period=1
